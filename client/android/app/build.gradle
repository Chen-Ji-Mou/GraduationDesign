def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.graduationdesign.graduationdesign"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 26
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11" // OpenCV新版本用这个C++11的特效，由于我们用的是较新的OpenCV
                // NDK从r16开始就切换到了llvm的libC++，所以opencv4从libstdC++切换到了libc++。
                // 导致链接错误的根本原因是设置了-DANDRID_STL=gnustl_shared，
                // 因为opencv利用的libc++编的，而非gnustl
                // arguments "-DANDROID_STL=gnustl_static" // OpenCV旧版本用这个
                arguments "-DANDROID_STL=c++_shared" // OpenCV新版本用这个，由于我们用的是较新的OpenCV
                abiFilters 'arm64-v8a'
            }
        }
    }

    signingConfigs {
        release {
            storeFile file("${project.rootDir}/../graduationdesign.jks")
            storePassword '123456'
            keyPassword '123456'
            keyAlias 'key0'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation files('/src/main/libs/ijkplayer.aar') // 拉流SDK
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.github.pedroSG94.rtmp-rtsp-stream-client-java:rtplibrary:2.2.2' // 推流SDK
    api 'com.alipay.sdk:alipaysdk-android:+@aar' // 支付宝SDK
}
